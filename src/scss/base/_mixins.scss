/**
 * Helper mixins
*/

// Clearfix
// http://www.cssmojo.com/latest_new_clearfix_so_far/
// Other clearfix options: https://github.com/stubbornella/oocss/blob/master/oocss/src/components/utils/_clearfix-me.scss
@import 'variables';


@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

// Text selection
@mixin text-selection($color-selection, $color-selection-bg) {
  ::-moz-selection {
    // sass-lint:disable-line no-vendor-prefixes
    background: $color-selection-bg;
    color: $color-selection;
    text-shadow: none;
  }

  ::selection {
    background: $color-selection-bg;
    color: $color-selection;
    text-shadow: none;
  }
}

// Mixin to generate media queries for breakpoints and above
@mixin breakpoint-up($point) {
  @if map-has-key($breakpoints, $point) {
    @media (min-width: map-get($breakpoints, $point)) {
      @content;
    }
  }

  @else {
    @error "Unknown breakpoint: #{$point}. Please use one of #{map-keys($breakpoints)}.";
  }
}

// Mixin to generate media queries for specific breakpoints only
@mixin breakpoint-only($point) {
  $keys: map-keys($breakpoints);
  $index: index($keys, $point);

  @if $index {
    $next: nth($keys, $index + 1);

    @media (min-width: map-get($breakpoints, $point)) and (max-width: if($next, map-get($breakpoints, $next) - 1, null)) {
      @content;
    }
  }

  @else {
    @error "Unknown breakpoint: #{$point}. Please use one of #{map-keys($breakpoints)}.";
  }
}

// Mixin to generate media queries for breakpoints and below
@mixin breakpoint-down($point) {
  @if map-has-key($breakpoints, $point) {
    $keys: map-keys($breakpoints);
    $index: index($keys, $point);

    $max: if($index, map-get($breakpoints, $point) - 1, null);

    @media (max-width: $max) {
      @content;
    }
  }

  @else {
    @error "Unknown breakpoint: #{$point}. Please use one of #{map-keys($breakpoints)}.";
  }
}

// Mixin to generate media queries for a range between two breakpoints
@mixin breakpoint-between($point1, $point2) {
  $keys: map-keys($breakpoints);
  $index1: index($keys, $point1);
  $index2: index($keys, $point2);

  $min: if($index1, map-get($breakpoints, $point1), null);
  $max: if($index2, map-get($breakpoints, $point2) - 1, null);

  @if $min and $max {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }

  @else {
    @error "Unknown breakpoints: #{$point1}, #{$point2}. Please use valid breakpoints defined in #{map-keys($breakpoints)}.";
  }
}


@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-vertical-center {
  display: flex;
  align-items: center;
}

@mixin flex-vertical-center-space {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin hover {
  @media only screen and (min-width: 1025px) {
    .no-touch-device &:hover {
      @content;
    }
  }
}